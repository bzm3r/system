{
    "window.titleBarStyle": "custom",
    "editor.rulers": [
        80
    ],
    /*
    ===============================
        FILES
    ===============================
    */
    "files.autoSave": "onFocusChange",
    /*
    ===============================
        TELEMETRY
    ===============================
    */
    "telemetry.telemetryLevel": "off",
    // TODO: configure asking for commit before allowing file deletion
    // TODO: configure undoing of file deletion
    "explorer.confirmDelete": true,
    "files.trimTrailingWhitespace": true,
    /* editor */
    "editor.minimap.enabled": false,
    "editor.snippetSuggestions": "top",
    /*
    ===============================
        LATEX
    ===============================
    */
    "workbench.editorAssociations": {
        "*.pdf": "latex-workshop-pdf-hook"
    },
    "[latex]": {
        "editor.wordWrap": "on"
    },
    /*
    ===============================
        MARKDOWN
    ===============================
    */
    // Markdown settings
    "[markdown]": {
        "editor.formatOnSave": true,
        "editor.formatOnPaste": true,
        "editor.formatOnType": true,
    },
    /*
    ===============================
        POWERSHELL
    ===============================
    */
    "[powershell]": {
        "debug.saveBeforeStart": "nonUntitledEditorsInActiveGroup",
        "editor.semanticHighlighting.enabled": false,
        "editor.wordSeparators": "`~!@#$%^&*()=+[{]}\\|;:'\",.<>/?",
    },
    /*
    ===============================
        RUST
    ===============================
    */
    "[rust]": {
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
        "editor.wrappingStrategy": "advanced",
        "rewrap.wrappingColumn": 80,
        "rewrap.autoWrap.enabled": true,
        "editor.wordWrap": "bounded",
        "editor.language.brackets": [
            [" ", "=>"],
            [" ", "->"],
            ["(", ")"],
            ["{", "}"],
            ["[", "]"],
            ["<", ">"]
         ],
        "editor.language.colorizedBracketPairs": [
            [" ", "=>"],
            [" ", "->"],
            ["<", ">"],
            ["{", "}"],
            ["(", ")"],
            ["[", "]"],
        ]
    },
    "rust-analyzer.inlayHints.chainingHints.enable": true,
    "rust-analyzer.inlayHints.typeHints.enable": true,
    "rust-analyzer.inlayHints.closureStyle": "impl_fn",
    "rust-analyzer.inlayHints.closingBraceHints.enable": true,
    "rust-analyzer.inlayHints.parameterHints.enable": true,
    "rust-analyzer.semanticHighlighting.punctuation.enable": true,
    /*
    ===============================
        SVELTE
    ===============================
    */
    "svelte.enable-ts-plugin": true,
    "svelte.plugin.svelte.note-new-transformation": false,
    /*
    ===============================
        TERMINAL
    ===============================
    */
    "terminal.integrated.fontSize": 15,
    "terminal.integrated.fontFamily": "'Inconsolata', 'monospace', monospace",
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "terminal.explorerKind": "external",
    "terminal.external.windowsExec": "C:\\Program Files\\WezTerm\\wezterm-gui.exe",
    /*
    ===============================
        COSMETICS
    ===============================
    */
    /*
        Simplifications of the UI
    */
    "editor.lineNumbers": "on",
    "editor.glyphMargin": false,
    // https://github.com/microsoft/vscode/issues/15968
    "diffEditor.ignoreTrimWhitespace": false,
    "editor.renderWhitespace": "none",
    /*
        Colors
    */
    "workbench.colorTheme": "Darcula Solid",
    // Controls whether the diff editor shows the diff side by side or inline.
    // Controls whether snippets are shown with other suggestions and how they are sorted.
    //  - top: Show snippet suggestions on top of other suggestions.
    //  - bottom: Show snippet suggestions below other suggestions.
    //  - inline: Show snippets suggestions with other suggestions.
    //  - none: Do not show snippet suggestions.
    // Controls whether `editor.tabSize#` and `#editor.insertSpaces` will be automatically detected when a file is opened based on the file contents.
    "editor.detectIndentation": false,
    // "workbench.statusBar.visible": false,
    // Controls the default location of the panel (Terminal, Debug Console, Output, Problems) in a new workspace.
    // It can either show at the bottom, right, or left of the editor area.
    "workbench.panel.defaultLocation": "left",

    /**
    Theming
    */
    "workbench.colorCustomizations": {
        "[Darcula Solid]": {
            "editorBracketHighlight.unexpectedBracket.foreground": "#ffffff",
            "editorError.background": "#ff00004f",
            "editorError.foreground": "#ffffff00",
            "editorRuler.foreground": "#89495e",
            "editor.background": "#060606",
            "editor.selectionBackground": "#002f61a4",
            "editor.selectionHighlightBackground": "#000000",
            "editor.selectionHighlightBorder": "#004996c6",
            "editor.inactiveSelectionBackground": "#4e00634b",
            "editor.rangeHighlightBackground": "#62007a49",
            "editor.rangeHighlightBorder": "#62007a49",
            "editor.wordHighlightBackground": "#00000000",
            "editor.wordHighlightBorder": "#ffffff78",
            "editor.wordHighlightTextBackground": "#00000000",
            "editor.wordHighlightTextBorder": "#ffffff78",
            "editor.findMatchBackground": "#ff000047",
            "editor.findMatchHighlightBackground": "#00ff1a47",
            "editor.findRangeHighlightBackground": "#002f61a4",
            "editor.findMatchBorder": "#ffffff78",
            "editor.findMatchHighlightBorder": "#ffffff78",
            "editor.findRangeHighlightBorder": "#ff00000f",
            "editor.selectionForeground": "#00000000",
            "searchEditor.findMatchBackground": "#47474765",
            "searchEditor.findMatchBorder": "#ffffff78",
            "peekViewEditor.background": "#12001d",
            "peekViewEditor.matchHighlightBackground": "#60606072",
            "peekViewEditor.matchHighlightBorder": "#00000000",
            "editor.lineHighlightBackground": "#000000",
            "editor.lineHighlightBorder": "#ffffff2d",
            // "breadcrumb.foreground": "#ff000000",
            // "breadcrumb.background": "#ff000000",
            // "breadcrumb.focusForeground": "#ff000000",
            "breadcrumb.activeSelectionForeground": "#00970d",
            // "breadcrumbPicker.background": "#ff000000",
            // "peekViewEditorStickyScroll.background": "#00000000",
            "peekViewResult.background": "#000000",
            // "peekViewResult.fileForeground": "#00000000",
            // "peekViewResult.lineForeground": "#00000000",
        }
    },
    "rust-analyzer.semanticHighlighting.punctuation.specialization.enable": true,
    "editor.semanticHighlighting.enabled": true,
    "editor.semanticTokenColorCustomizations": {
        "[Darcula Solid]": {
            "enabled": true,
            "rules": {
                "macro": "#70ffd9",
                "namespace": {
                    "foreground": "#ffffff"
                },
                "parameter": {
                    "foreground": "#ffffff"
                },
                "parameter.callable": {
                    "foreground": "#ceff8e"
                },
                "function": {
                    "foreground": "#91ff00"
                },
                "method": {
                    "foreground": "#53ff84"
                },
                "variable": {
                    "foreground": "#ffffff"
                },
                "*.static": {
                    "bold": true
                },
                "*.consuming": {
                    "underline": true
                },
                "*.mutable": {
                    "italic": true
                },
                "struct": {
                    "foreground": "#3271fb",
                    "bold": true
                },
                "struct.defaultLibrary": {
                    "foreground": "#427eff",
                    "bold": true
                },
                "interface": {
                    "foreground": "#32c9fb",
                    "bold": true,
                },
                "interface.defaultLibrary": {
                    "foreground": "#32b1fb",
                    "bold": true,
                },
                "property": {
                    "foreground": "#35aeff"
                },
                "enum.defaultLibrary": {
                    "foreground": "#a228bd",
                    "bold": true,
                },
                "enum": {
                    "foreground": "#b32ed1",
                    "bold": true
                },
                "enumMember": {
                    "foreground": "#eb90ff",
                },
                "builtinType": {
                    "foreground": "#7f7fce",
                    "bold": true
                },
                "typeAlias.defaultLibrary": {
                    "foreground": "#913ecf",
                    "bold": true,
                },
                "typeAlias": {
                    "foreground": "#b14bff",
                    "bold": true,
                },
                "builtinAttribute": {
                    "foreground": "#ff9292",
                    "underline": true,
                },
                "generic.attribute": {
                    "foreground": "#7A9EC2",
                },
                "derive": {
                    "foreground": "#7A9EC2"
                },
                "deriveHelper": {
                    "foreground": "#fcbb9d"
                },
                "decorator": {
                    "foreground": "#fcbb9d"
                },
                "decorator.defaultLibrary": {
                    "foreground": "#fcbb9d",
                    "underline": true,
                },
                "keyword": {
                    "foreground": "#ffb300"
                },
                "keyword.controlFlow": {
                    "foreground": "#ff8800",
                    "bold": true,
                },
                "keyword.operator": {
                    "foreground": "#11ff00",
                    "bold": true,
                },
                "typeParameter": {
                    "foreground": "#ff3a3a",
                    "bold": true
                },
                "lifetime": {
                    "foreground": "#ff5d5d",
                    "bold": true
                },
                "selfTypeKeyword": {
                    "foreground": "#ffe100",
                    "bold": true
                },
                "selfKeyword": {
                    "foreground": "#ffe100",
                },
                "boolean": {
                    "foreground": "#ffffff",
                    "bold": true
                },
                "constParameter": {
                    "foreground": "#ffffff",
                    "bold": true,
                    "underline": true,
                },
                "comment": {
                    "foreground": "#92d7ff8f"
                },
                "comment.documentation": {
                    "foreground": "#ff92f68f"
                },
                "unresolvedReference": {
                    "foreground": "#ff000090",
                    "underline": true,
                    "bold": true,
                }
            }
        }
    },
    "terminal.integrated.cursorStyle": "line",
    "powershell.promptToUpdatePowerShell": false,
    "powershell.integratedConsole.showOnStartup": false,
    "editor.unicodeHighlight.allowedCharacters": {
        "❯": true,
        "ᐳ": true,
        " ": true
    },
    "errorLens.statusBarIconsEnabled": true,
    "errorLens.enableOnDiffView": true,
    "errorLens.fontFamily": "\"Atkinson Hyperlegible\"",
    "errorLens.removeLinebreaks": false,
    "errorLens.messageBackgroundMode": "message",
    "editor.fontFamily": "Inconsolata Nerd Font Mono, Source Code Pro",
    "rust-analyzer.check.command": "clippy",
    "rust-analyzer.check.overrideCommand": [
        "cargo",
        "clippy",
        "--workspace",
        "--message-format=json",
        "--all-targets",
    ],
    "rust-analyzer.checkOnSave": false,
    "terminal.sourceControlRepositoriesKind": "external",
    "errorLens.enabled": true,
    "audioCues.lineHasError": "off",
    "errorLens.editorHoverPartsEnabled": {
        "messageEnabled": true,
        "sourceCodeEnabled": true,
        "buttonsEnabled": true
    },
    "errorLens.messageTemplate": "$message $code",
    "rust-analyzer.diagnostics.previewRustcOutput": true,
    "rust-analyzer.diagnostics.useRustcErrorCode": true,
    "editor.multiCursorModifier": "ctrlCmd",
    "git.autoStash": true,
    "git.closeDiffOnOperation": true,
    "git.enableSmartCommit": true,
    "git.mergeEditor": true,
    "workbench.sideBar.location": "right",
    "peacock.favoriteColors": [
        {
            "name": "Angular Red",
            "value": "#dd0531"
        },
        {
            "name": "Azure Blue",
            "value": "#007fff"
        },
        {
            "name": "JavaScript Yellow",
            "value": "#f9e64f"
        },
        {
            "name": "Mandalorian Blue",
            "value": "#1857a4"
        },
        {
            "name": "Node Green",
            "value": "#215732"
        },
        {
            "name": "React Blue",
            "value": "#61dafb"
        },
        {
            "name": "Something Different",
            "value": "#832561"
        },
        {
            "name": "Svelte Orange",
            "value": "#ff3d00"
        },
        {
            "name": "Vue Green",
            "value": "#42b883"
        },
        {
            "name": "Rustic Rust",
            "value": "#000000"
        }
    ],
    "git.confirmSync": false,
    "rust-analyzer.completion.snippets.custom": {
        "pub new": {
            "prefix": "pub new",
            "body": [
                "pub fn new(${1:}) -> Self { $0 }"
            ],
            "description": "Create a public new method",
            "scope": "item"
        },
        "pub(crate) new": {
            "prefix": [
                "pubc new",
                "pub(crate) new"
            ],
            "body": [
                "pub(crate) fn new(${1:}) -> Self { $0 }"
            ],
            "description": "Create a public new method",
            "scope": "item"
        },
        "new": {
            "prefix": [
                "new",
            ],
            "body": [
                "fn new(${1:}) -> Self { $0 }"
            ],
            "description": "Create a public new method",
            "scope": "item"
        },
        "Arc::new": {
            "postfix": "arc",
            "body": "Arc::new(${receiver})",
            "requires": "std::sync::Arc",
            "description": "Put the expression into an `Arc`",
            "scope": "expr"
        },
        "Rc::new": {
            "postfix": "rc",
            "body": "Rc::new(${receiver})",
            "requires": "std::rc::Rc",
            "description": "Put the expression into an `Rc`",
            "scope": "expr"
        },
        "Box::pin": {
            "postfix": "pinbox",
            "body": "Box::pin(${receiver})",
            "requires": "std::boxed::Box",
            "description": "Put the expression into a pinned `Box`",
            "scope": "expr"
        },
        "Ok": {
            "postfix": "ok",
            "body": "Ok(${receiver})",
            "description": "Wrap the expression in a `Result::Ok`",
            "scope": "expr"
        },
        "Err": {
            "postfix": "err",
            "body": "Err(${receiver})",
            "description": "Wrap the expression in a `Result::Err`",
            "scope": "expr"
        },
        "Some": {
            "postfix": "some",
            "body": "Some(${receiver})",
            "description": "Wrap the expression in an `Option::Some`",
            "scope": "expr"
        }
    },
    "editor.inlayHints.fontSize": 14,
    "rust-analyzer.inlayHints.closureReturnTypeHints.enable": "always",
    "rust-analyzer.inlayHints.closureCaptureHints.enable": true,
    "rust-analyzer.inlayHints.maxLength": null,
    "rust-analyzer.inlayHints.closingBraceHints.minLines": 1,
    "rust-analyzer.inlayHints.bindingModeHints.enable": true,
    "rust-analyzer.restartServerOnConfigChange": true,
    "rust-analyzer.completion.privateEditable.enable": true,
    "editor.inlayHints.fontFamily": "Atkinson Hyperlegible",
    "editor.inlayHints.enabled": "on",
    "errorLens.excludeBySource": [
        "rustc(E0412)"
    ],
    "diffEditor.wordWrap": "on",
    // Spellcheck ignore list
    "cSpell.userWords": [
        "Backline",
        "blitting",
        "Bloodlust",
        "bytemuck",
        "Carapaced",
        "Clippy",
        "Conal",
        "Concotions",
        "consts",
        "Coolheaded",
        "counterplay",
        "criticals",
        "debuffs",
        "distrib",
        "Featureful",
        "fello",
        "flac",
        "Fontcraft",
        "gilrs",
        "gltf",
        "Greataxe",
        "Irresistable",
        "Katamari",
        "kurbo",
        "libloading",
        "linewidth",
        "metavar",
        "Multitarget",
        "nonmagical",
        "npch",
        "overconsumption",
        "Peekable",
        "peniko",
        "Polearm",
        "Runeseeker's",
        "rustfmt",
        "simulationist",
        "Slimoid",
        "supercompression",
        "Telemedicine",
        "Threadbound",
        "tonemapping",
        "travelling",
        "UASTC",
        "Unmaker",
        "UPSCALING",
        "vello",
        "Vorbis",
        "wgpu",
        "winit",
        "worldspeaker",
        "Zstandard",
        "zstd"
    ],
    "editor.inlineSuggest.showToolbar": "always",
    "editor.quickSuggestionsDelay": 0,
    "editor.suggest.localityBonus": true,
    "editor.quickSuggestions": {
        "comments": "on",
        "strings": "on"
    },
    "editor.suggest.showStatusBar": true,
    "git.autofetch": true,
    "git.autorefresh": false,
    "git.postCommitCommand": "push",
    "githubRepositories.indexing.cacheSizeLimit": 500,
    "workbench.editor.showTabs": "none",
    "rust-analyzer.debug.engine": "vadimcn.vscode-lldb",
    "rust-analyzer.debug.openDebugPane": true,
    "editor.wordWrap": "wordWrapColumn",
    "editor.wrappingStrategy": "advanced",
    "rewrap.autoWrap.enabled": true,
    "rewrap.wrappingColumn": 80,
    "errorLens.followCursor": "closestProblem",
    "errorLens.messageMaxChars": 0,
    "errorLens.searchForProblemQuery": "https://google.com/?q=$message",
    "errorLens.statusBarMessageEnabled": true,
    "errorLens.statusBarIconsAtZero": "hide",
    "errorLens.messageEnabled": false,
    "errorLens.statusBarMessageTemplate": "$message",
    "errorLens.statusBarMessageType": "closestProblem",
    "errorLens.enabledDiagnosticLevels": [
        "error"
    ],
    "editor.guides.bracketPairs": "active",
    "rust-analyzer.semanticHighlighting.punctuation.separate.macro.bang": true,
    "rust-analyzer.semanticHighlighting.operator.specialization.enable": true,
    "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
    "editor.matchBrackets": "near",
    "githubPullRequests.pullBranch": "never",
    "githubRepositories.indexing.verboseDownloadNotification": false,
    "peacock.showColorInStatusBar": false,
    "peacock.affectStatusBar": false,
    "liveshare.showInStatusBar": "whileCollaborating",
    "workbench.layoutControl.enabled": false,
    "window.enableMenuBarMnemonics": false,
    "terminal.integrated.scrollback": 10000,
    "window.openFilesInNewWindow": "default",
    "window.newWindowDimensions": "maximized",
    "diffEditor.experimental.showMoves": true,
    "diffEditor.maxComputationTime": 0,
    "diffEditor.renderSideBySide": false,
    "cmake.configureOnOpen": true,
    "terminal.integrated.tabStopWidth": 2,
    "settingsSync.ignoredSettings": [
        "-window.zoomLevel"
    ],
    "settingsSync.keybindingsPerPlatform": false,
    "vscode-color-picker.languages": [
        "jsonc",
    ],
    "nix.enableLanguageServer": true,
    "nix.serverPath": "nil",
    "nix.serverSettings": {
        "nix.serverSettings": {
            "nil": {
            "formatting": { "command": ["nixpkgs-fmt"] }
        },
        // settings for 'nixd' LSP
        "nixd": {
            "eval": {
                // stuff
            },
            "formatting": {
                "command": "nixpkgs-fmt"
            },
            "options": {
                "enable": true,
                "target": {
                    // tweak arguments here
                    "args": [],
                    // NixOS options
                    "installable": "<flakeref>#nixosConfigurations.<name>.options"

                    // Flake-parts options
                    // "installable": "<flakeref>#debug.options"

                    // Home-manager options
                    // "installable": "<flakeref>#homeConfigurations.<name>.options"
                    }
                }
            }
        }
    },
    "workbench.activityBar.location": "hidden",
    "editor.codeLensFontFamily": "Atkinson Hyperlegible",
    "files.associations": {
        "start": "shellscript",
        "config": "shellscript",
        "theme": "shellscript",
        "keys": "shellscript",
        "variables": "shellscript",
        "l-inputs": "shellscript",
        "idle": "shellscript",
        "sty": "shellscript",
        "vars": "shellscript",
        "bar": "shellscript",
        "inputs(d)": "shellscript",
        "inputs(l)": "shellscript"
    },
    "window.zoomLevel": 2,
    "editor.fontSize": 17,
    "search.showLineNumbers": true,
    "window.customMenuBarAltFocus": false,
    "window.density.editorTabHeight": "compact",
    "window.title": "${dirty}${profileName}${separator}${focusedView}${separator}${activeEditorLong}",
    "window.titleSeparator": "",
}